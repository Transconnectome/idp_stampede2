#!/bin/bash

list=$1
threads=1
#threadsX2=$((${threads}*2))

#IDP=/ifs/scratch/pimri/posnerlab/1anal/IDP
IDP=/scratch/03263/jcha9928/data/idp/

#CMD_batch=/ifs/scratch/pimri/posnerlab/1anal/IDP/code/idp/job/cmd1.batch.trac.${list}
CMD_batch=$IDP/job/code/idp_stampede2
rm $CMD_batch

for s in `cat $IDP/data/$list` # e.g., list_subject_dti_t1
do
#s=`echo $SUBJECT | egrep -o '[0-9]{8}'`
SUBJECT=${s}_1mm_flair 
CMD=/scratch/03263/jcha9928/data/idp/code/idp_stampede2/job/cmd1.trac.${s}
rm $CMD
SUBJECT=${s}_1mm_flair


cat<<EOC >$CMD
#!/bin/bash
source ~/.bashrc
workingdir=/scratch/03263/jcha9928/data/idp/fs/${SUBJECT}/dmri3
echo $workingdir

if [ ! -e \$workingdir ]; then mkdir \$workingdir; fi
cd \$workingdir
pwd

#%% 1. setup %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
cp $IDP/data/$s/dti.nii.gz ./
cp $IDP/data/$s/dti.bvec_tp ./
cp $IDP/data/$s/dti.bval_tp ./
cp $IDP/data/$s/dti.bvec ./
cp $IDP/data/$s/dti.bval ./

#%% 2. DWI processing2-converting nifti to mif%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if [ ! -e mr_dwi.mif.gz  ];then
    mrconvert dti.nii.gz -force mr_dwi.mif.gz -fslgrad dti.bvec dti.bval -datatype float32 -stride 0,0,0,1 -nthreads $threads
fi

#%% 3. denoising
if [ ! -e mr_dwi_denoised.mif.gz ];then
    dwidenoise mr_dwi.mif.gz -force mr_dwi_denoised.mif.gz -nthreads $threads
fi

#%% 4. dwipreproc -eddy current
if [ ! -e mr_dwi_denoised_preproc.mif.gz ];then
    dwipreproc PA mr_dwi_denoised.mif.gz -force mr_dwi_denoised_preproc.mif.gz -rpe_none -nthreads $threads
fi

#%% 5. mask and bias field correction
if [ ! -e mr_eroded_mask.mif.gz ]; then
     dwi2mask mr_dwi_denoised_preproc.mif.gz - | maskfilter - erode -npass 7 -force mr_eroded_mask.mif.gz -nthreads $threads
fi

#%% 6. bias field correction
if [ ! -e mr_dwi_denoised_preproc_biasCorr.mif.gz ]; then
     dwibiascorrect mr_dwi_denoised_preproc.mif.gz -force mr_dwi_denoised_preproc_biasCorr.mif.gz -ants -mask mr_eroded_mask.mif.gz -fslgrad dti.bvec dti.bval -nthreads $threads
fi


#%% 7. generating b0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if [ ! -e mr_meanb0.mif.gz ];then
     dwiextract mr_dwi_denoised_preproc_biasCorr.mif.gz - -bzero -nthreads $threadsX2 | mrmath - mean -force mr_meanb0.mif.gz -axis 3 -nthreads $threads
fi

#%% 8. upsampling %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
for im in mr_dwi_denoised_preproc_biasCorr mr_eroded_mask mr_meanb0;
do 
     if [ ! -e \${im}_upsample.mif.gz ];then
     mrresize \${im}.mif.gz -scale 2.0 -force \${im}_upsample.mif.gz -nthreads $threads
     fi
done


#%% 9. dwi2response-subject level %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if [ ! -e response_wm.txt ]; then
    dwi2response dhollander -mask mr_eroded_mask.mif.gz -voxels mr_voxels_eroded.mif.gz mr_dwi_denoised_preproc_biasCorr.mif.gz response_wm.txt response_gm.txt response_csf.txt -force -nthreads $threads
fi


#%% FOD%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#% make sure to use "DILATED MASK" for FOD generation
if [ ! -e mr_dilate_mask.mif.gz ];then
    dwi2mask mr_dwi_denoised_preproc_biasCorr.mif.gz - | maskfilter - dilate -npass 5 -force mr_dilate_mask.mif.gz -nthreads $threads
fi

if [ ! -e WM_FODs.mif.gz ];then
   dwi2fod msmt_csd mr_dwi_denoised_preproc_biasCorr.mif.gz response_wm.txt WM_FODs.mif.gz response_gm.txt gm.mif.gz response_csf.txt csf.mif.gz -mask mr_dilate_mask.mif.gz -force -nthreads $threads
fi

if [ ! -e tissueRGB.mif.gz ]; then
   mrconvert WM_FODs.mif.gz - -coord 3 0 | mrcat csf.mif.gz gm.mif.gz - tissueRGB.mif.gz -axis 3
fi

mrconvert mr_dwi_denoised_preproc_biasCorr.mif.gz mr_dwi_denoised_preproc_biasCorr.nii.gz -nthreads $threads
mrconvert mr_dilate_mask.mif.gz mr_dilate_mask.nii.gz -nthreads $threads
dtifit -k mr_dwi_denoised_preproc_biasCorr.nii.gz -o dtifit -m mr_dilate_mask.nii.gz -r dti.bvec -b dti.bval -V



echo "I THINK EVERYTHING IS DONE BY NOW"
EOC


chmod +x $CMD
echo $CMD>>$CMD_batch


done

### batch submission

echo $CMD_batch
#$code/fsl_sub_hpc_3 -s smp,$threads -l /ifs/scratch/pimri/posnerlab/1anal/IDP/code/idp/job -t $CMD_batch
#$code/fsl_sub_hpc_6 -l /ifs/scratch/pimri/posnerlab/1anal/IDP/code/idp/job -t $CMD_batch


launch_script=/scratch/03263/jcha9928/data/idp/code/idp_stampede2/job/batch_script

cat<<EOM > $launch_script
#!/bin/bash
#SBATCH -J mrtrix1           # Job name
#SBATCH -o ./job/mrx1.o%j       # Name of stdout output file
#SBATCH -e ./job/mrx1.e%j       # Name of stderr error file
#SBATCH -p normal          # Queue (partition) name
#SBATCH -N 4               # Total # of nodes
#SBATCH -n 4            # Total # of mpi tasks
#SBATCH -t 2:00:00        # Run time (hh:mm:ss)
#SBATCH --mail-user=cha.jiook@gmail.com
#SBATCH --mail-type=all    # Send email at begin and end of job
#SBATCH -A TG-TRA120004

# Other commands must follow all #SBATCH directives...

module list
pwd
date

module load launcher
sleep 3
export LAUNCHER_PLUGIN_DIR=$LAUNCHER_DIR/plugins
export LAUNCHER_RMI=SLURM
export LAUNCHER_JOB_FILE=`echo \$batch_script`

# Launch MPI code...
$LAUNCHER_DIR/paramrun

EOM
echo $launch_script

